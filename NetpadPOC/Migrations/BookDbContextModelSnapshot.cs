// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetpadPOC.Contexts;

#nullable disable

namespace NetpadPOC.Migrations
{
    [DbContext(typeof(BookDbContext))]
    partial class BookDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NetpadPOC.Entities.Author", b =>
                {
                    b.Property<int>("RandomPrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RandomPrimaryKey"));

                    b.HasKey("RandomPrimaryKey");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("NetpadPOC.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RandomPrimaryKey")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RandomPrimaryKey");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("NetpadPOC.Entities.Book", b =>
                {
                    b.HasOne("NetpadPOC.Entities.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("RandomPrimaryKey")
                        .IsRequired()
                        .HasConstraintName("FK_TargetDetail_Concession");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("NetpadPOC.Entities.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
